---
image:
  pullPolicy: IfNotPresent
  pullSecrets: []
  repository: nginx
  tag: latest
meta:
  env: ""
  maintainer: ""
  version: ""
server:
  enabled: true
  annotations: {}
  affinity: {}
  command: []
  args: []
  autoReload: true
  dnsPolicy: ClusterFirst
  env: {}
  containers: []
  volumeMounts: []
  volumes: []
  istio:
    injected: false
  fullNameOverride: ""
  nameOverride: ""
  nodeSelector: {}
  port: 80
  prometheus:
    path: /metrics
    port: 2112
    scrape: true
  liveness: {}
  readiness: {}
  replicas: []
  resources: {}
  restartPolicy: Always
  rollingUpdate:
    maxSurge: 25%
    maxUnavailable: 25%
  tolerations: []
initContainer:
  enabled: false
  image: ubuntu:20.04
  pullPolicy: IfNotPresent
  command: {}
  args: {}
  env: {}
service:
  enabled: true
  annotations: {}
  port: 80
  targetPort: http
  type: LoadBalancer
  multiport:
    enabled: false
    config: {}
keda:
  enabled: true
  config: {}
autoscaling:
  enabled: true
  annotations: {}
  minReplicas: 1
  maxReplicas: 3
  cpu:
    target:
      type: Utilization
      averageUtilization: 70
  memory:
    target:
      type: Utilization
      averageUtilization: 70
configMap:
  enabled: true
  annotations: {}
  data: {}
  mountPath: params
  subPath: ""
  readOnly: true
ingress:
  enabled: true
  annotations: {}
  class: nginx
  issuer:
    namespaced: false
    name: letsencrypt
  tls:
    - hosts: []
  hosts: []
  pathtype: ImplementationSpecific
  secondHost:
    enabled: false
    annotations: {}
    class: nginx
    issuer:
      name: letsencrypt
      namespaced: false
    tls:
      - hosts: []
    hosts: []
pdb:
  enabled: false
  minAvailable: 1
cronJobs:
  enabled: false
  image: ubuntu:20.04
  pullPolicy: IfNotPresent
  pullSecrets: []
  schedule: "* * * * *"
  command:
    - sleep
  args:
    - 10s
  env: {}
